{"version":3,"sources":["components/footer/footer.tsx","page/mainPage.tsx","api/_apiInstance.ts","api/bigCompRepo.ts","page/bigCompanyPage.tsx","app/router.tsx","components/button/primaryBtn.tsx","components/button/secondaryBtn.tsx","components/article/headerBar.tsx","shared/store.ts","app/app.tsx","shared/globalStyle.ts","index.tsx"],"names":["Cover","styled","div","Footer","article","MainPage","AxiosInstance","axios","create","baseURL","process","REACT_APP_API_URL","withCredentials","interceptors","request","use","response","error","Promise","reject","data","message","alert","localStorage","clear","window","location","href","console","log","getSector","a","get","then","answer","catch","err","BigCompanyPage","useState","test","setTest","useEffect","result","map","name","MainCover","main","Router","exact","path","component","PrimaryBtn","label","size","onClick","Primary","button","HeaderBar","isLogin","history","useHistory","Logo","push","to","ButtonContainer","style","margin","cursor","header","span","userState","atom","key","default","App","user","useRecoilValue","className","GlobalStyle","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.562f0dd6.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Footer = () => {\n  return (\n    <Cover>\n      <p>©WhyDoThat</p>\n      <p>제작자 : 정근영, 김태훈, 나두원</p>\n      <p>Email : whydothat.studio@gmail.com</p>\n    </Cover>\n  );\n};\n\nconst Cover = styled.div`\n  display: flex;\n  background-color: #141d3d;\n  height: 12vh;\n  color: white;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default Footer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction MainPage() {\n  return (\n    <Cover>\n      <p>Main</p>\n    </Cover>\n  );\n}\n\nconst Cover = styled.article``;\n\nexport default MainPage;\n","import axios, { AxiosRequestConfig, AxiosError } from 'axios';\n\nexport const AxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true,\n});\n\nAxiosInstance.interceptors.request.use(\n  (response) => {\n    // 요청 바로 직전\n    // axios 설정값에 대해 작성합니다.\n    // localStorage.getItem('token')\n    //   ? (response.headers['Authorization'] = `jwt ${localStorage.getItem(\n    //       'token',\n    //     )}`)\n    //   : null;\n\n    return response;\n  },\n  (error) => {\n    // 요청 에러 처리를 작성합니다.\n    return Promise.reject(error);\n  },\n);\n\nAxiosInstance.interceptors.response.use(\n  (response) => {\n    /*\n        http status가 200인 경우\n        응답 바로 직전에 대해 작성합니다. \n        .then() 으로 이어집니다.\n    */\n\n    return response;\n  },\n\n  (error) => {\n    if (error.response) {\n      if (error.response.data.message === 'Signature has expired.') {\n        alert('로그인 시간이 만료되었습니다. 다시 로그인 해주세요');\n        localStorage.clear();\n        return (window.location.href = '/');\n      }\n      console.log(error.response);\n\n      return Promise.reject(error);\n    } else {\n      alert(`예기치 못한 에러 ${error.message}`);\n      return Promise.reject(error);\n    }\n    /*\n        http status가 200이 아닌 경우\n        응답 에러 처리를 작성합니다.\n        .catch() 으로 이어집니다.    \n    */\n  },\n);\n","import { AxiosInstance } from './_apiInstance';\n\nimport { AxiosError, AxiosResponse } from 'axios';\n\nexport const getSector = async () => {\n  return AxiosInstance.get('/getsector')\n    .then((answer) => {\n      return answer.data;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { getSector } from 'api/bigCompRepo';\n\nfunction BigCompanyPage() {\n  const [test, setTest] = useState<{ name: string; id: number }[]>();\n\n  useEffect(() => {\n    (async () => {\n      const result = await getSector();\n      console.log('====================================');\n      console.log(result.data);\n      console.log('====================================');\n      setTest(result.data);\n    })();\n  }, []);\n\n  return (\n    <Cover>\n      <p>Big</p>\n\n      {test?.map((data) => (\n        <p>{data.name}</p>\n      ))}\n    </Cover>\n  );\n}\n\nconst Cover = styled.article`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default BigCompanyPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { BigCompanyPage, MainPage } from 'page';\n\nfunction Router() {\n  return (\n    <MainCover>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n        <Route exact path=\"/big\" component={BigCompanyPage} />\n      </Switch>\n    </MainCover>\n  );\n}\n\nconst MainCover = styled.main`\n  height: 100%;\n`;\n\nexport default Router;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface PrimaryBtnProps {\n  label: string;\n  size?: 'large' | 'normal' | 'small';\n  onClick?: () => void;\n}\n\nexport function PrimaryBtn({\n  label,\n  size = 'normal',\n  onClick,\n}: PrimaryBtnProps) {\n  return (\n    <Primary size={size} onClick={onClick}>\n      {label}\n    </Primary>\n  );\n}\n\nconst Primary = styled.button<{ size: 'large' | 'normal' | 'small' }>`\n  width: ${({ size }) =>\n    size === 'large' ? '200px' : size === 'small' ? '80px' : '152px'};\n  height: ${({ size }) =>\n    size === 'large' ? '48px' : size === 'small' ? '24px' : '40px'};\n  background-color: #304ffe;\n  color: white;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  text-overflow: ellipsis;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface SecondaryBtnProps {\n  label: string;\n  size?: 'large' | 'normal' | 'small';\n}\n\nexport function SecondaryBtn({ label, size = 'normal' }: SecondaryBtnProps) {\n  return <Secondary size={size}>{label}</Secondary>;\n}\n\nconst Secondary = styled.button<{ size: 'large' | 'normal' | 'small' }>`\n  width: ${({ size }) =>\n    size === 'large' ? '200px' : size === 'small' ? '80px' : '152px'};\n  height: ${({ size }) =>\n    size === 'large' ? '48px' : size === 'small' ? '24px' : '40px'};\n  background-color: #7a7cff;\n  color: white;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  text-overflow: ellipsis;\n`;\n","import React, { useState } from 'react';\nimport { PrimaryBtn } from 'components/button';\nimport styled from 'styled-components';\nimport { Search } from '@styled-icons/bootstrap';\nimport { useRecoilValue } from 'recoil';\nimport { userState } from 'shared/store';\nimport { useHistory, Link } from 'react-router-dom';\n\nexport interface HeaderBarProps {\n  isLogin: boolean;\n}\n\nexport function HeaderBar({ isLogin }: HeaderBarProps) {\n  // const user = useRecoilValue(userState);\n  const history = useHistory();\n  return (\n    <Cover>\n      <Logo onClick={() => history.push('/')}>\n        <h1>Why Do That?</h1>\n      </Logo>\n\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/big\">대기업</Link>\n          </li>\n        </ul>\n      </nav>\n\n      <ButtonContainer>\n        <Search size=\"24\" style={{ margin: '0 1rem ', cursor: 'pointer' }} />\n        <PrimaryBtn\n          label={isLogin ? '로그아웃' : '로그인'}\n          onClick={() => console.log('test')}\n        />\n      </ButtonContainer>\n    </Cover>\n  );\n}\n\nconst Cover = styled.header`\n  display: flex;\n  height: 8vh;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 2rem;\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n`;\n\nconst Logo = styled.div`\n  cursor: pointer;\n\n  p {\n    font-weight: bolder;\n  }\n`;\n\nconst ButtonContainer = styled.span`\n  display: flex;\n  width: fit-content;\n  align-items: center;\n`;\n","import { atom, selector } from 'recoil';\n\nexport const userState = atom({\n  key: 'user',\n  default: { isLogin: false },\n});\n","import React from 'react';\n\nimport Footer from 'components/footer/footer';\nimport Router from 'app/router';\nimport { HeaderBar } from 'components/article';\nimport { useRecoilValue } from 'recoil';\nimport { userState } from 'shared/store';\n\nfunction App() {\n  const user = useRecoilValue(userState);\n\n  return (\n    <div className=\"App\">\n      <HeaderBar isLogin={user.isLogin} />\n      <Router />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import styled, { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset};\n    \n    .App{\n        width:100%;\n        height:100vh;\n        box-sizing:border-box;\n    }\n    body {\n        overflow:auto;\n    }\n    div{\n        width:100%;\n    }\n      h1 {\n    font-size: 35px;\n  }\n\n  @media screen and (min-width: 768px) {\n    h1 {\n      font-size: 40px;\n      font-weight: bolder;\n    }\n  }\n    h2 {\n    font-weight: bold;\n    margin: 0.5rem 0;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { RecoilRoot } from 'recoil';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './app/app';\nimport GlobalStyle from 'shared/globalStyle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <BrowserRouter>\n        <GlobalStyle />\n        <App />\n      </BrowserRouter>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}