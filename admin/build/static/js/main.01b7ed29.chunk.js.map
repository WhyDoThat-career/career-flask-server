{"version":3,"sources":["assets/fonts/DIN2014-Regular.woff","assets/gopizza.png","components/atoms/atomicImg.tsx","components/atoms/sequnceTxt.tsx","components/atoms/normalText.tsx","components/atoms/largeText.tsx","components/atoms/subText.tsx","components/atoms/title.tsx","components/atoms/roundedCheckbox.tsx","components/molecules/guideImg.tsx","components/molecules/userName.tsx","shared/resource.ts","components/molecules/currentPizza.tsx","components/molecules/currentVideo.tsx","components/molecules/logo.tsx","components/molecules/orderListItem.tsx","components/molecules/orderTimer.tsx","components/molecules/currentTimer.tsx","components/molecules/modeListItem.tsx","components/molecules/workerListItem.tsx","components/organisms/headerBar.tsx","components/organisms/progressBar.tsx","components/organisms/content.tsx","components/organisms/orderBoard.tsx","components/organisms/orderList.tsx","components/modal/plainModal.tsx","components/organisms/menuBar.tsx","shared/hook/useModal.tsx","components/organisms/modeList.tsx","components/organisms/card.tsx","components/organisms/workerList.tsx","components/template/mainTemplate.tsx","page/mainPage.tsx","reducer/orderReducer.ts","reducer/recipeReducer.ts","app.tsx","reducer/rootReducer.ts","store.ts","GlobalStyle.ts","root.tsx","index.tsx"],"names":["module","exports","Img","styled","img","props","width","height","AtomicImg","src","isSetRatio","ref","useRef","useEffect","current","console","log","clientWidth","String","p","size","NormalTxt","color","NormalText","sentence","TitleTxt","LargeText","SubTxt","margin","SubText","h1","Cover","span","RoundCheck","input","RoundedCheckbox","id","type","className","name","htmlFor","div","GuideContainer","GuideImg","guideMsg","pizzaName","useSelector","store","order","recipeInfo","recipe","window","location","hostname","curr_topping","UserName","userName","ranking","pizzaNameDict","Classic_cheese","Pepperoni","Bacon_potato","Super_combination","Sweet_potato","Hawiian","Ham_and_cheddar","Gorgonzola","Bulgogi","Asian_seafood","TOPPINGNAMES","sauce","crabSauce","creamSauce","cheese","afterCheese","sweetPotatoMoose","cheddarCheese","onion","mushroom","blackOlive","pepperoni","corn","bacon","bulgogi","wedgePotato","halfSlicedHam","bellPepper","tomato","pineapple","garlicChip","sweetPotatoCube","teriyakiOnion","shrimp","crab","gorgonzola","finish","MEASURES","EA","spoon","g","CurrentPizza","TimeContainer","WarningContainer","CurrentVideo","time","warningMsg","Logo","require","OrderListItem","OrderTimer","timeStr","orderInfoStore","RegExp","split","map","str","length","join","CurrentTimer","useState","moment","setTime","setInterval","onClick","e","fetch","then","answer","ok","catch","err","format","ModeItem","Title","WorkerListItem","tableNum","HeaderBar","userStore","user_store","ProgressCover","CustomProgress","PercentCover","percent","PercentTxt","Percent","DotsContainer","Dot","Line","PassTxt","ProgressBar","progressVal","setProgressVal","scale","setScale","setToppingLen","currTopping","result","i","push","status","oldval","newVal","oldVal","pizza_recipe","key","GridBox","GridContainer","Content","cam_image","guide_msg","slice","topping","count","title","amount","goal","measure","OrderBoard","TitleContainer","OrderList","orderLists","orderTimes","idx","isOpen","Modal","ModalHeader","FormModal","hide","createPortal","stopPropagation","document","getElementById","createElement","MenuContainer","InfoContainer","MenuBar","button","setOpen","show","RenderModal","children","useModal","orderInfo","user_name","cookingTime","ModeList","CardCover","Card","WorkerList","workerInfo","workingList","worker","table","pizza","MainTemplate","header","sidebar","content","ContentContainer","MainPage","orderSlice","createSlice","initialState","historyList","reducers","increaseOrder","state","action","payload","decreaseOrder","filter","orderId","actions","recipeSlice","cpu_time","requestTopping","warning_msg","working_list","App","dispatch","useDispatch","setsocketData","socket","WebSocket","binaryType","onopen","onmessage","obj","JSON","parse","data","pizza_name","cooking_time","order_list","order_time","send","onclose","onLoad","RootReducer","combineReducers","orderReducer","recipeReducer","configureStore","reducer","rootReducer","GlobalStyles","createGlobalStyle","reset","DIN2014","Root","Store","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.01b7ed29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DIN2014-Regular.15ac4d53.woff\";","module.exports = __webpack_public_path__ + \"static/media/gopizza.f610ee53.png\";","import React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\ninterface ImgProps {\n  src: string;\n  width?: string;\n  height?: string;\n  isSetRatio?: boolean;\n}\n\nfunction AtomicImg({ src, width, height, isSetRatio }: ImgProps) {\n  const ref = useRef<HTMLImageElement>();\n\n  useEffect(() => {\n    ref?.current && console.log(\"ref\", ref?.current.clientWidth);\n  }, [ref?.current?.clientWidth]);\n\n  return (\n    <Img\n      ref={ref}\n      src={src}\n      width={width}\n      height={\n        isSetRatio\n          ? `${String(ref?.current?.clientWidth * (9 / 16))}px `\n          : height\n      }\n    />\n  );\n}\n\nconst Img = styled.img<{ width?: string; height?: string }>`\n  width: ${(props) => (props.width ? props.width : \"100%\")};\n  height: ${(props) => (props.height ? props.height : \"100%\")};\n  max-height: 545px;\n  border-radius: 5px;\n`;\n\nexport default AtomicImg;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface SequenceTxtProps {\n  sentence: string;\n  size?: string;\n}\n\nfunction SequnceTxt({ sentence, size }: SequenceTxtProps) {\n  return <Txt size={size}>{sentence}</Txt>;\n}\n\nconst Txt = styled.p<{ size?: string }>`\n  color: #f38700;\n  font-size: ${(props) => (props.size ? `${props.size}` : \"1rem\")};\n`;\n\nexport default SequnceTxt;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface NormalTextProps {\n  sentence: string;\n  size?: string;\n  color?: string;\n}\n\nfunction NormalText({ sentence, size, color }: NormalTextProps) {\n  return (\n    <NormalTxt size={size} color={color}>\n      {sentence}\n    </NormalTxt>\n  );\n}\n\nconst NormalTxt = styled.p<{ size?: string; color?: string }>`\n  font-size: ${(props) => (props.size ? `${props.size}` : \"16px\")};\n  /* margin: 0.5rem; */\n  color: ${(props) => (props.color ? props.color : \"#040f3b\")};\n`;\n\nexport default NormalText;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface TitleProps {\n  sentence: string;\n  size?: string;\n  color?: string;\n}\n\nfunction LargeText({ sentence, size, color }: TitleProps) {\n  return (\n    <TitleTxt size={size} color={color}>\n      {sentence}\n    </TitleTxt>\n  );\n}\n\nconst TitleTxt = styled.p<{ size: string; color: string }>`\n  font-size: ${(props) => (props.size ? `${props.size}` : \"32px\")};\n  font-weight: bold;\n  color: ${(props) => (props.color ? props.color : \"#051137\")};\n  white-space: nowrap;\n`;\n\nexport default LargeText;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface SubtextProps {\n  sentence: string;\n  size?: string;\n  color?: string;\n  margin?: string;\n}\n\nfunction SubText({ sentence, size, color = \"#7F8498\", margin }: SubtextProps) {\n  return (\n    <SubTxt size={size} color={color} margin={margin}>\n      {sentence}\n    </SubTxt>\n  );\n}\n\nconst SubTxt = styled.p<{ size?: string; color?: string; margin?: string }>`\n  font-size: ${(props) => (props.size ? `${props.size}` : \"16px\")};\n  color: ${(props) => props.color};\n  margin: ${(props) => props.margin};\n`;\n\nexport default SubText;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface TitleProps {\n  sentence: string;\n}\n\nfunction Title({ sentence }: TitleProps) {\n  return <TitleTxt>{sentence}</TitleTxt>;\n}\n\nconst TitleTxt = styled.h1`\n  font-size: 48px;\n  font-weight: bolder;\n  color: #fe7100;\n`;\n\nexport default Title;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Check } from \"@styled-icons/bootstrap\";\n\ninterface RoundedCheckboxProps {\n  id: string;\n}\n\nfunction RoundedCheckbox({ id }: RoundedCheckboxProps) {\n  return (\n    <Cover>\n      <RoundCheck\n        type=\"checkbox\"\n        className=\"checkmark\"\n        id={`${id}`}\n        name=\"cc\"\n      />\n      <label htmlFor={`${id}`}>\n        <span>\n          <Check size=\"16px\" />\n        </span>\n      </label>\n    </Cover>\n  );\n}\n\nconst Cover = styled.span`\n  input[type=\"checkbox\"] {\n    display: none;\n  }\n\n  input[type=\"checkbox\"] + label {\n    width: 24px;\n    height: 24px;\n  }\n\n  input[type=\"checkbox\"] + label span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 24px;\n    height: 24px;\n    /* margin: -2px 10px 0 0; */\n    border-radius: 45px;\n    text-align: center;\n    vertical-align: middle;\n    cursor: pointer;\n    color: gray;\n    border: 1px solid gray;\n\n    transition: 0.3s all ease;\n  }\n  input[type=\"checkbox\"]:checked + label span {\n    background: #fe7100;\n    color: white;\n    border: none;\n  }\n`;\n\nconst RoundCheck = styled.input`\n  width: 30px;\n  height: 30px;\n  display: none;\n`;\n\nexport default RoundedCheckbox;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AtomicImg, LargeText } from \"components/atoms\";\nimport { GUIDEMESSAGES } from \"shared/resource\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../reducer/rootReducer\";\n\ninterface GuideImgProps {\n  src: string;\n  guideMsg: string;\n}\n\nfunction GuideImg({ src, guideMsg }: GuideImgProps) {\n  const pizzaName = useSelector((store: RootState) => store.order.pizzaName);\n  const recipeInfo = useSelector((store: RootState) => store.recipe);\n  //window.location.hostname\n  return (\n    <Cover>\n      <AtomicImg\n        // src={`http://192.168.0.248:8888/static/guide_video/${pizzaName}/${recipeInfo?.curr_topping?.name}.png`}\n        src={`http://${window.location.hostname}:8888/static/guide_video/${pizzaName}/${recipeInfo?.curr_topping?.name}.png`}\n        // width=\"100%\"\n      />\n\n      <GuideContainer>\n        <LargeText sentence={`${guideMsg}`} color=\"white\" size=\"53px\" />\n      </GuideContainer>\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  border-radius: 5px !important;\n  position: relative;\n  box-sizing: border-box;\n`;\n\nconst GuideContainer = styled.span`\n  display: flex;\n  width: 100%;\n  height: 15%;\n  justify-content: center;\n  align-items: center;\n  background-color: #040f3b;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  position: absolute;\n  bottom: 0;\n`;\n\nexport default GuideImg;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { LargeText, SubText } from \"components/atoms\";\n\ninterface UserInfoProps {\n  userName: string;\n  ranking: string;\n}\n\nfunction UserName({ userName, ranking }: UserInfoProps) {\n  return (\n    <Cover>\n      <LargeText sentence={`안녕하세요, ${userName}`} size={\"36px\"} />\n      <SubText sentence={`Ranking#${ranking}`} margin={\".5rem 0\"} />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  box-sizing: border-box;\n  border-bottom: 2px solid black;\n`;\n\nexport default UserName;\n","export const pizzaNameDict = {\n  Classic_cheese: \"클래식 치즈 피자\",\n  Pepperoni: \"페퍼로니 피자\",\n  Bacon_potato: \"베이컨 포테이토 피자\",\n  Super_combination: \"슈퍼 콤비네이션 피자\",\n  Sweet_potato: \"고구마 피자\",\n  Hawiian: \"하와이안 피자\",\n  Ham_and_cheddar: \"햄앤체다 피자\",\n  Gorgonzola: \"고르곤졸라 피자\",\n  Bulgogi: \"불고기 피자\",\n  Asian_seafood: \"아시안 시푸드 피자\",\n};\n\nexport const TOPPINGNAMES = {\n  sauce: \"토마토 소스\",\n  crabSauce: \"홍게 소스\",\n  creamSauce: \"크림 소스\",\n  cheese: \"모짜렐라 치즈\",\n  afterCheese: \"모짜렐라 치즈\",\n  sweetPotatoMoose: \"고구마 무스\",\n  cheddarCheese: \"체다 치즈 소스\",\n  onion: \"양파\",\n  mushroom: \"버섯\",\n  blackOlive: \"블랙 올리브\",\n  pepperoni: \"페퍼로니\",\n  corn: \"옥수수\",\n  bacon: \"베이컨\",\n  bulgogi: \"불고기\",\n  wedgePotato: \"배터 바이트\",\n  halfSlicedHam: \"슬라이스 햄\",\n  bellPepper: \"피망\",\n  tomato: \"방울 토마토 1/4\",\n  pineapple: \"파인애플\",\n  garlicChip: \"갈릭칩\",\n  sweetPotatoCube: \"고구마 큐브\",\n  teriyakiOnion: \"데리양파\",\n  shrimp: \"새우\",\n  crab: \"게살\",\n  gorgonzola: \"고르곤졸라 치즈\",\n  finish: \"완성\",\n};\n\nexport const MEASURES = {\n  EA: \"개\",\n  spoon: \"스푼\",\n  g: \"g\",\n};\n\nexport const GUIDEMESSAGES = {\n  \"Waiting Order..\": \"주문 대기중 ..\",\n  \"Place the dough on the table and the guide starts.\":\n    \"도우를 테이블에 올려주시면, 안내를 시작합니다.\",\n  \"Pizza cooking is complete !!\": \"피자조리가 완료되었습니다 !!\",\n  Spread: \"를 펴주세요.\",\n  Topping: \"를 토핑 해주세요.\",\n  EA: \"개\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { AtomicImg, LargeText, NormalText } from \"components/atoms\";\nimport { pizzaNameDict } from \"shared/resource\";\n\ninterface CurrentPizzaProps {\n  pizzaName: string;\n}\n\nfunction CurrentPizza({ pizzaName }: CurrentPizzaProps) {\n  return (\n    <Cover>\n      <LargeText sentence={\"지금 만드는 피자는...\"} size=\"36px\" />\n      <LargeText\n        sentence={pizzaNameDict[`${pizzaName}`]}\n        color=\"#FF6D00\"\n        size=\"24px\"\n      />\n      <AtomicImg\n        src={`http://${window.location.hostname}:8888/static/media/${pizzaName}.png`}\n        isSetRatio={true}\n        // width={\"400px\"}\n        // height={\"250px\"}\n      />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  p {\n    margin: 0.5rem 0;\n  }\n`;\n\nexport default CurrentPizza;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Warning } from \"@styled-icons/ionicons-solid\";\n\nimport { AtomicImg, LargeText, SubText } from \"components/atoms\";\nimport { OrderTimer } from \".\";\n\ninterface CurrentVideoProps {\n  src: string;\n  time: string;\n  warningMsg: string;\n}\n\nfunction CurrentVideo({ src, time, warningMsg }: CurrentVideoProps) {\n  return (\n    <Cover>\n      <TimeContainer>\n        <LargeText sentence={\"조리 시간 경과\"} size=\"40px\" />\n        <OrderTimer time={time} />\n      </TimeContainer>\n      <AtomicImg src={src} isSetRatio={true} />\n\n      <WarningContainer>\n        {warningMsg && (\n          <>\n            <Warning size=\"16px\" color=\"#ee7700\" />\n            <SubText sentence={warningMsg} color={\"#ee7700\"} />\n          </>\n        )}\n      </WarningContainer>\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TimeContainer = styled.span`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin: 1rem 0;\n`;\n\nconst WarningContainer = styled.span`\n  display: flex;\n  width: 100%;\n  min-height: 30px;\n  align-items: flex-end;\n`;\n\nexport default CurrentVideo;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { LargeText, Title } from \"components/atoms\";\n\ninterface LogoProps {\n  location: string;\n}\n\nfunction Logo({ location }: LogoProps) {\n  return (\n    <Cover>\n      <img src={require(\"../../assets/gopizza.png\")} width=\"125px\" />\n      <LargeText sentence={location} size=\"26px\" />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: block;\n`;\n\nexport default Logo;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { LargeText } from \"components/atoms\";\nimport { OrderTimer } from \"components/molecules\";\n\ninterface OrderListItemProps {\n  pizzaName: string;\n  time: string;\n}\n\nfunction OrderListItem({ pizzaName, time }: OrderListItemProps) {\n  return (\n    <Cover>\n      <LargeText sentence={pizzaName} size=\"24px\" />\n      <OrderTimer time={time} />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport default OrderListItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"reducer/rootReducer\";\nimport { SubText } from \"components/atoms\";\n\ninterface Timer {\n  time: string;\n}\n\nconst correctTimerFormat = (timeStr: string) => {\n  return timeStr\n    .split(\":\")\n    .map((str) => (str.length === 1 ? `0${str}` : str))\n    .join(\":\");\n};\n\nfunction OrderTimer({ time }: Timer) {\n  const orderInfoStore = useSelector((store: RootState) => store.order);\n  const regex = new RegExp(\"^\" + orderInfoStore?.pizzaName + \"$\", \"i\");\n\n  return (\n    <Cover>\n      {/* <p>{`주문번호 - ${\n        orderInfoStore.orderLists.findIndex((order) => regex.test(order)) + 1\n      } `}</p> */}\n      <SubText\n        sentence={correctTimerFormat(time)}\n        size={\"18px\"}\n        color=\"#fe7100\"\n      />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: fit-content;\n`;\n\nexport default OrderTimer;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\n\nimport { LargeText, NormalText } from \"components/atoms\";\n\nfunction CurrentTimer() {\n  const [time, setTime] = useState(moment());\n\n  useEffect(() => {\n    setInterval(() => {\n      setTime(moment());\n    }, 1000);\n  }, []);\n\n  return (\n    <Cover\n      onClick={(e) =>\n        fetch(`http://${window.location.hostname}:8888/cancel`)\n          .then((answer) => console.log(`success ${answer.ok}`))\n          .catch((err) => {\n            throw err;\n          })\n      }\n    >\n      <NormalText sentence={time.format(\"yyyy.MM.DD\")} />\n      <LargeText sentence={time.format(\"HH:mmA\")} />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  width: fit-content;\n  align-items: flex-end;\n  cursor: pointer;\n`;\n\nexport default CurrentTimer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { RoundedCheckbox, SubText } from \"components/atoms\";\n\ninterface ModeItemProps {\n  sentence: string;\n  id: string;\n}\n\nfunction ModeItem({ sentence, id }: ModeItemProps) {\n  return (\n    <Cover>\n      <SubText sentence={sentence} color=\"#fe7100\" />\n      <RoundedCheckbox id={id} />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  border-bottom: 1px solid #fe7100;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.3rem;\n  margin: 0.5rem 0;\n`;\n\nexport default ModeItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { LargeText, NormalText } from \"components/atoms\";\n\ninterface WorkerListItemProps {\n  tableNum: string;\n  name: string;\n  pizzaName: string;\n}\n\nfunction WorkerListItem({ tableNum, name, pizzaName }: WorkerListItemProps) {\n  return (\n    <Cover>\n      <Title>{`${tableNum}번 테이블`}</Title>\n      <span>\n        <NormalText sentence={name} size=\"18px\" />\n        <NormalText sentence={pizzaName} size=\"18px\" />\n      </span>\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin: 1rem 0;\n\n  span {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nconst Title = styled.p`\n  width: 100%;\n  font-size: 22px;\n  font-weight: bold;\n`;\n\nexport default WorkerListItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nimport { RootState } from \"reducer/rootReducer\";\nimport { CurrentTimer, Logo } from \"components/molecules\";\n\nfunction HeaderBar() {\n  const userStore = useSelector((store: RootState) => store.order.user_store);\n\n  return (\n    <Cover>\n      <Logo location={`${userStore}`} />\n      <CurrentTimer />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  border-bottom: 2px solid black;\n`;\n\nconst PizzaImg = styled.img`\n  width: 200px;\n  height: 100%;\n`;\n\nconst TextContainer = styled.span`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: center;\n  margin: 1rem;\n`;\n\nconst Title = styled.p`\n  font-weight: bold;\n  font-size: 50px;\n`;\n\nexport default HeaderBar;\n","import { LargeText } from \"components/atoms\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"reducer/rootReducer\";\nimport styled from \"styled-components\";\n\nfunction ProgressBar() {\n  const [progressVal, setProgressVal] = useState(0);\n  const [scale, setScale] = useState<Array<number>>([]);\n  const [toppingLen, setToppingLen] = useState<number>(0);\n  const ref = useRef<HTMLElement>();\n\n  const currTopping = useSelector(\n    (store: RootState) => store.recipe.curr_topping\n  );\n\n  const recipeInfo = useSelector((store: RootState) => store.recipe);\n\n  useEffect(() => {\n    // if (currTopping.name === \"creamSauce\") {\n    //   const interval = setInterval(() => {\n    //     if (progressVal === 100) {\n    //       clearInterval(interval);\n    //       return;\n    //     }\n    //     setProgressVal((oldVal) => {\n    //       return (oldVal += 10);\n    //     });\n    //   }, 1800);\n    // }\n\n    // const interval = setInterval(() => {\n    //   if (progressVal === 100) {\n    //     clearInterval(interval);\n    //     return;\n    //   }\n    //   setProgressVal((oldVal) => {\n    //     return (oldVal += 10);\n    //   });\n    // }, 1800);\n\n    const result = [];\n    for (let i = 0; i < 100; i += 10) {\n      i >= 10 && result.push(i);\n    }\n    setScale(result);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"percent\", currTopping.status, progressVal);\n\n    setProgressVal((oldval) => {\n      const newVal = currTopping.status > oldval ? currTopping.status : oldval;\n\n      // return newVal % 10 === 0 ? newVal : newVal - (newVal % 10);\n      return newVal - (newVal % 10);\n    });\n  }, [currTopping]);\n\n  useEffect(() => {\n    setToppingLen((oldVal) => {\n      if (oldVal === recipeInfo.pizza_recipe?.length) {\n        return oldVal;\n      } else {\n        setProgressVal(0);\n        return recipeInfo.pizza_recipe?.length;\n      }\n    });\n  }, [recipeInfo.pizza_recipe]);\n\n  useEffect(() => {\n    ref?.current && console.log(\"test\", ref?.current?.clientWidth);\n  }, [ref?.current?.clientWidth]);\n\n  return (\n    <ProgressCover>\n      <PassTxt ref={ref} margin={ref?.current?.clientWidth}>\n        <p>합격</p>\n      </PassTxt>\n      <CustomProgress>\n        <DotsContainer>\n          {scale.map((scale) => (\n            <Dot key={scale} />\n          ))}\n        </DotsContainer>\n        <PercentCover percent={progressVal}>\n          <PercentTxt percent={progressVal}>{`정량 판독중 `}</PercentTxt>\n          <Percent percent={progressVal}>{`${progressVal}%`}</Percent>\n        </PercentCover>\n        <Line />\n      </CustomProgress>\n    </ProgressCover>\n  );\n}\n\nconst ProgressCover = styled.div`\n  display: grid;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  grid-template-rows: 3fr 7fr;\n  justify-items: end;\n`;\n\nconst CustomProgress = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  position: relative;\n  border-radius: 45px;\n`;\n\nconst PercentCover = styled.div<{ percent: number }>`\n  display: flex;\n  width: ${(props) => `${props.percent}%`};\n  position: absolute;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(to right, #ff9527, #67e091);\n  z-index: 4;\n  border-radius: 45px;\n  font-size: 32px;\n  white-space: nowrap;\n\n  p {\n    color: white;\n    font-weight: bold;\n  }\n`;\n\nconst PercentTxt = styled.p<{ percent: number }>`\n  display: ${(props) => (props.percent > 30 ? \"block\" : \"none\")};\n`;\n\nconst Percent = styled.p<{ percent: number }>`\n  display: ${(props) => (props.percent > 10 ? \"block\" : \"none\")};\n`;\n\nconst DotsContainer = styled.span`\n  display: grid;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  grid-template-columns: repeat(10, 1fr);\n  justify-items: end;\n  align-items: center;\n  z-index: 2;\n`;\n\nconst Dot = styled.span`\n  width: 5px;\n  height: 5px;\n  background-color: #ebebeb;\n  border-radius: 45px;\n  z-index: 3;\n`;\n\nconst Line = styled.div`\n  display: block;\n  width: 2px;\n  height: 100%;\n  background-color: #ff9527;\n  z-index: 4;\n  right: 20%;\n  position: absolute;\n`;\n\nconst PassTxt = styled.span<{ margin: number }>`\n  display: flex;\n  width: 5%;\n  /* min-width: 50px; */\n  height: 100%;\n  border-radius: 5px;\n  background-color: #ff9527;\n  margin-right: 17.5%;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n\n  p {\n    color: white;\n    white-space: nowrap;\n    text-align: center;\n    vertical-align: middle;\n  }\n`;\n\nexport default ProgressBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nimport { GuideImg } from \"components/molecules\";\nimport { RootState } from \"reducer/rootReducer\";\nimport { Card } from \"components/organisms\";\nimport ProgressBar from \"components/organisms/progressBar\";\n\nfunction Content() {\n  const recipeInfo = useSelector((store: RootState) => store.recipe);\n\n  return (\n    <Cover>\n      <GuideImg src={recipeInfo.cam_image} guideMsg={recipeInfo.guide_msg} />\n      <GridBox>\n        {recipeInfo.pizza_recipe?.slice(0, 4).map((topping) => (\n          <Card\n            key={topping?.name}\n            status={\n              topping?.name === recipeInfo?.curr_topping?.name ? \"now\" : \"next\"\n            }\n            count={\n              topping?.name === recipeInfo?.curr_topping?.name &&\n              recipeInfo.curr_topping.count\n            }\n            title={topping?.name}\n            amount={topping?.goal}\n            measure={topping?.measure}\n          />\n        ))}\n\n        <GridContainer>\n          <ProgressBar />\n        </GridContainer>\n      </GridBox>\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-rows: 6fr 4fr;\n  box-sizing: border-box;\n  grid-gap: 1em;\n`;\n\nconst GridBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 24%);\n  grid-template-rows: 7fr 3fr;\n  box-sizing: border-box;\n  grid-gap: 1em;\n  padding: 1rem 0;\n`;\n\nconst GridContainer = styled.span`\n  display: flex;\n  height: 100%;\n  grid-column: 1/5;\n  grid-row: 2;\n  width: 100%;\n  height: 100%;\n  align-items: end;\n`;\n\nexport default Content;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { OrderList, ModeList, WorkerList } from \"components/organisms\";\n\nfunction OrderBoard() {\n  return (\n    <Cover>\n      <WorkerList />\n      <OrderList />\n      <ModeList />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nexport default OrderBoard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"reducer/rootReducer\";\n\nimport { pizzaNameDict } from \"shared/resource\";\nimport { LargeText } from \"components/atoms\";\nimport { OrderListItem } from \"components/molecules\";\n\nfunction OrderList() {\n  const orderLists = useSelector((store: RootState) => store.order.orderLists);\n\n  const orderTimes = useSelector((store: RootState) => store.order.orderTimes);\n\n  return (\n    <Cover>\n      <TitleContainer>\n        <LargeText sentence=\"대기 주문\" />\n        <LargeText sentence={`총합 ${orderLists.length}개`} />\n      </TitleContainer>\n\n      {orderLists?.slice(0, 10).map((order, idx) => {\n        return (\n          <OrderListItem\n            pizzaName={pizzaNameDict[order]}\n            time={orderTimes[idx]}\n          />\n        );\n      })}\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  height: 50%;\n  overflow: hidden;\n  box-sizing: border-box;\n\n  p {\n    margin: 0.5rem 0;\n  }\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 2px solid #051137;\n  margin-bottom: 1rem;\n`;\n\nexport default OrderList;\n","import React, { useState, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\nimport { Close } from \"@styled-icons/ionicons-solid/\";\n\nconst FormModal = ({ title, isOpen, Content, hide }) => {\n  return createPortal(\n    <Cover\n      isOpen={isOpen}\n      onClick={(e) => {\n        e.stopPropagation();\n        hide();\n      }}\n    >\n      <Modal\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <ModalHeader>\n          {title}\n          <Close size=\"24\" onClick={hide} />\n        </ModalHeader>\n        {Content}\n      </Modal>\n    </Cover>,\n    document.getElementById(\"modal\") || document.createElement(\"div\")\n  );\n};\n\nconst Cover = styled.div<{ isOpen: boolean }>`\n  display: ${(props) => (props.isOpen ? \"flex\" : \"none\")};\n  position: fixed;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.16);\n`;\n\nconst Modal = styled.div`\n  display: grid;\n  width: 60%;\n  height: 50%;\n  position: absolute;\n  background-color: white;\n  border-radius: 15px;\n  grid-template-rows: 10% 90%;\n  /* transform: translate(25%, 50%); */\n  z-index: 9999 !important;\n\n  form {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1rem;\n  box-sizing: border-box;\n  border-bottom: 1px solid gray;\n`;\n\nconst ModalFooter = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0 1rem;\n`;\n\nexport default FormModal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nimport { Education } from \"@styled-icons/zondicons\";\nimport { Pizza, FileTrayStacked } from \"@styled-icons/ionicons-solid\";\n\nimport { UserName, CurrentPizza, CurrentVideo } from \"components/molecules\";\nimport { useModal } from \"shared/hook/useModal\";\nimport { RootState } from \"reducer/rootReducer\";\n\nfunction MenuBar() {\n  const { show, hide, RenderModal } = useModal(\"test\");\n  const orderInfo = useSelector((store: RootState) => store.order);\n  const recipeInfo = useSelector((store: RootState) => store.recipe);\n\n  return (\n    <>\n      <Cover>\n        <MenuContainer>\n          <UserName userName={orderInfo.user_name} ranking={\"1\"} />\n\n          <InfoContainer>\n            <CurrentPizza pizzaName={orderInfo.pizzaName} />\n\n            <CurrentVideo\n              src={`${recipeInfo.cam_image}`}\n              time={orderInfo.cookingTime}\n              warningMsg={recipeInfo.warningMsg}\n            />\n          </InfoContainer>\n        </MenuContainer>\n      </Cover>\n      <RenderModal>\n        <p>테스트</p>\n      </RenderModal>\n    </>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  box-sizing: border-box;\n`;\n\nconst MenuContainer = styled.span`\n  display: grid;\n  grid-template-rows: 1fr 9fr;\n  height: 100%;\n  background-color: white;\n  justify-items: center;\n  align-items: center;\n  padding: 1rem;\n  box-sizing: border-box;\n  grid-gap: 1rem;\n`;\n\nconst InfoContainer = styled.span`\n  display: grid;\n  width: 100%;\n  height: 100%;\n  grid-template-rows: repeat(2, 1fr);\n`;\n\nconst CumstonBtn = styled.button`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  border: none;\n  font-size: 18px;\n  cursor: pointer;\n`;\n\nexport default MenuBar;\n","import React, { useState, useEffect } from \"react\";\nimport Modal from \"components/modal/plainModal\";\n\nexport const useModal = (title) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const show = () => setOpen(true);\n  const hide = () => setOpen(false);\n\n  useEffect(() => {\n    console.log(\"====================================\");\n    console.log(isOpen);\n    console.log(\"====================================\");\n  }, [isOpen]);\n\n  const RenderModal = ({ children }) => (\n    <>\n      {isOpen && (\n        <Modal title={title} Content={children} isOpen={isOpen} hide={hide} />\n      )}\n    </>\n  );\n\n  return { show, hide, RenderModal };\n};\n","import React from \"react\";\nimport stlyed from \"styled-components\";\n\nimport { ModeListItem } from \"components/molecules\";\nimport styled from \"styled-components\";\n\nfunction ModeList() {\n  return (\n    <Cover>\n      <ModeListItem sentence={\"트레이닝 모드\"} id=\"트레이닝 모드\" />\n      <ModeListItem sentence={\"선조리 모드\"} id=\"선조리 모드\" />\n      <ModeListItem sentence={\"대량 조리 모드\"} id=\"대량 조리 모드\" />\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n\n  p {\n    font-size: 24px;\n  }\n`;\n\nexport default ModeList;\n","import { LargeText, SubText } from \"components/atoms\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { MEASURES, TOPPINGNAMES } from \"shared/resource\";\n\ninterface CardProps {\n  status: string;\n  count: number;\n  title: string;\n  amount: string;\n  measure: string;\n}\n\nfunction Card({ status, title, amount, measure, count }: CardProps) {\n  return (\n    <CardCover\n      status={status}\n      onClick={(e) =>\n        status === \"now\" &&\n        fetch(`http://${window.location.hostname}:8888/pass`)\n          .then((answer) => {\n            console.log(\"pass\");\n          })\n          .catch((err) => {\n            throw err;\n          })\n      }\n    >\n      <GridBox>\n        <LargeText\n          sentence={status}\n          color={status === \"now\" ? \"white\" : \"#fe7100\"}\n        />\n        <LargeText\n          sentence={TOPPINGNAMES[`${title}`]}\n          color={status === \"now\" ? \"white\" : \"black\"}\n          // size=\"46px\"\n          size=\"40px\"\n        />\n        <LargeText\n          sentence={\n            measure\n              ? `${status === \"now\" ? `${count}/` : \"\"}${amount}${\n                  MEASURES[`${measure}`]\n                }`\n              : \"\"\n          }\n          color={status === \"now\" ? \"white\" : \"black\"}\n          // size=\"46px\"\n          size=\"40px\"\n        />\n      </GridBox>\n    </CardCover>\n  );\n}\n\nconst CardCover = styled.div<{ status: string }>`\n  display: flex;\n  width: 100%;\n  box-sizing: border-box;\n  background-color: ${(props) =>\n    props.status === \"now\" ? \" #fe7100\" : \"white\"};\n  border-radius: 15px;\n`;\n\nconst GridBox = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-rows: 20% 40% 40%;\n  align-items: center;\n  padding: 1rem;\n`;\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"reducer/rootReducer\";\nimport WorkerListItem from \"components/molecules/workerListItem\";\nimport { pizzaNameDict } from \"shared/resource\";\n\nfunction WorkerList() {\n  // const workerInfo = useSelector((store: RootState) =>\n  //   store.recipe.workingList?.length > 1\n  //     ? store.recipe?.workingList?.sort(\n  //         (pre, post) => Number(pre.table) - Number(post.table)\n  //       )\n  //     : store.recipe?.workingList\n  // );\n\n  const workerInfo = useSelector(\n    (store: RootState) => store.recipe?.workingList\n  );\n\n  return (\n    <Cover>\n      {workerInfo?.map((worker) => (\n        <WorkerListItem\n          tableNum={worker?.table}\n          name={worker?.worker}\n          pizzaName={pizzaNameDict[`${worker?.pizza}`]}\n        />\n      ))}\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: block;\n  width: 100%;\n`;\n\nexport default WorkerList;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface MainTemplateProps {\n  header: React.ReactChild;\n  sidebar: React.ReactChild;\n  content: React.ReactChild;\n}\n\nfunction MainTemplate({ header, sidebar, content }: MainTemplateProps) {\n  return (\n    <Cover>\n      {sidebar}\n\n      <GridBox>\n        {header}\n        {content}\n      </GridBox>\n    </Cover>\n  );\n}\n\nconst Cover = styled.div`\n  display: grid;\n  /* width: 100%; */\n  height: 100%;\n  background-color: #f7f7f7;\n  grid-template-columns: 2.5fr 7.5fr;\n  box-sizing: border-box;\n`;\n\nconst GridCover = styled.div`\n  display: flex;\n  height: 100%;\n  box-sizing: border-box;\n`;\n\nconst GridBox = styled.div`\n  display: grid;\n  /* width: 100%; */\n  height: 100%;\n  grid-template-rows: 1fr 9fr;\n  padding: 1rem;\n  grid-gap: 1em;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst HeaderContainer = styled.span`\n  display: flex;\n`;\n\nconst SideBarContainer = styled.span`\n  display: flex;\n`;\n\nconst ContentContainer = styled.span`\n  display: flex;\n`;\n\nexport default MainTemplate;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { MenuBar, OrderBoard } from \"components/organisms\";\nimport { Content, HeaderBar } from \"components/organisms\";\nimport InfoModal from \"components/modal/infoModal\";\nimport { useModal } from \"shared/hook/useModal\";\nimport MainTemplate from \"components/template/mainTemplate\";\n\nfunction MainPage() {\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const closeModal = (e) => {\n    e.stopPropagation();\n    setModalOpen(false);\n  };\n\n  return (\n    <MainTemplate\n      header={<HeaderBar />}\n      sidebar={<MenuBar />}\n      content={\n        <ContentContainer>\n          <Content />\n          <OrderBoard />\n        </ContentContainer>\n      }\n    />\n  );\n}\n\nconst Cover = styled.div`\n  display: grid;\n  width: 100%;\n  height: 100vh;\n  background-color: #f7f7f7;\n  grid-template-columns: 2.5fr 7.5fr;\n`;\n\nconst ContentContainer = styled.span`\n  display: grid;\n  height: 100%;\n  grid-template-columns: 8fr 2fr;\n  box-sizing: border-box;\n  grid-gap: 1em;\n`;\n\nexport default MainPage;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialVal = {\n  user_name: \"유저 없음\",\n  user_store: \"매장 없음\",\n  pizzaName: \"\",\n  cookingTime: \"00:00\",\n  orderLists: [],\n  historyList: [],\n  orderTimes: [],\n};\n\nconst orderSlice = createSlice({\n  name: \"order\",\n  initialState: initialVal,\n  reducers: {\n    increaseOrder: (state, action) => {\n      state.user_name = action.payload.user_name;\n      state.user_store = action.payload.user_store;\n      state.pizzaName = action.payload.pizzaName;\n      state.cookingTime = action.payload.cookingTime;\n      state.orderLists = action.payload.orderLists;\n      state.historyList = action.payload.historyList;\n      state.orderTimes = action.payload.orderTimes;\n    },\n    decreaseOrder: (state, action) => {\n      state.orderLists.filter(\n        (order) => order.orderId !== action.payload.orderId\n      );\n    },\n  },\n});\n\nexport const { increaseOrder, decreaseOrder } = orderSlice.actions;\nexport default orderSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialVal = {\n  cam_image: \"https://t1.daumcdn.net/cfile/tistory/2352573456DAF6DA2A\",\n  guide_msg: \"\",\n  curr_topping: {\n    goal: \"없음\",\n    count: 0,\n    measure: \"\",\n    name: \"토핑없음\",\n    status: 0,\n  },\n  workingList: [\n    { cpu_time: \"없음\", pizza: \"없음\", table: \"없음\", worker: \"없음\" },\n  ],\n  pizza_recipe: [\n    { goal: \"없음\", measure: \"없음\", name: \"토핑없음\", status: 0 },\n  ],\n  warningMsg: \"\",\n};\n\nconst recipeSlice = createSlice({\n  name: \"recipe\",\n  initialState: initialVal,\n  reducers: {\n    requestTopping: (state, action) => {\n      state.cam_image = action.payload.cam_image;\n      state.curr_topping = action.payload.curr_topping;\n      state.pizza_recipe = action.payload.pizza_recipe;\n      state.guide_msg = action.payload.guide_msg;\n      state.warningMsg = action.payload.warning_msg;\n      state.workingList = action.payload.working_list;\n    },\n  },\n});\n\nexport const { requestTopping } = recipeSlice.actions;\nexport default recipeSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport MainPage from \"page/mainPage\";\nimport { useDispatch } from \"react-redux\";\nimport { increaseOrder } from \"reducer/orderReducer\";\nimport { requestTopping } from \"reducer/recipeReducer\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const [socketData, setsocketData] = useState({\n    cam_image: null,\n  });\n\n  useEffect(() => {\n    // const obj = {\n    //   user_name: \"\",\n    //   user_store: \"\",\n    //   pizza_name: \"\",\n    //   cooking_time: \"\",\n    //   order_list: [],\n    //   historyList: [],\n    //   order_time: [],\n    //   pizza_recipe: [],\n    // };\n\n    // obj.user_name = \"김태훈\";\n    // obj.user_store = \"내꿈은 요리사\";\n    // obj.pizza_name = \"Pepperoni\";\n    // obj.cooking_time = \"00:00\";\n    // obj.order_list = [\"Pepperoni\"];\n    // obj.historyList = [];\n    // obj.order_time = [\"00:00\"];\n\n    // console.log(\"====================================\");\n    // console.log(\"socket test \", obj);\n    // console.log(\"====================================\");\n\n    // dispatch(\n    //   increaseOrder({\n    //     user_name: obj.user_name ? obj.user_name : \"기다리는 중...\",\n    //     user_store: obj.user_store ? obj.user_store : \"기다리는 중...\",\n    //     pizzaName: obj.pizza_name,\n    //     cookingTime: obj.cooking_time,\n    //     orderLists: obj.order_list,\n    //     historyList: [],\n    //     orderTimes: [obj.order_time],\n    //   })\n    // );\n\n    // obj.pizza_recipe = [\n    //   { goal: \"없음\", measure: \"0EA\", name: \"토핑없음\", status: 0 },\n    // ];\n\n    // dispatch(\n    //   requestTopping({\n    //     pizza_recipe: obj.pizza_recipe,\n    //   })\n    // );\n\n    const onLoad = () => {\n      const socket = new WebSocket(\n        `ws://${\n          process.env.NODE_ENV === \"production\"\n            ? window.location.hostname\n            : \"192.168.0.248\"\n        }:9000`\n      ); // 192.168.0.248\n      socket.binaryType = \"arraybuffer\";\n      socket.onopen = () => {\n        console.log(\"Connected!\");\n      };\n\n      socket.onmessage = (e) => {\n        const obj = JSON.parse(e.data);\n\n        setsocketData(obj);\n\n        console.log(\"====================================\");\n        console.log(\"socket test \", obj);\n        console.log(\"====================================\");\n        dispatch(\n          increaseOrder({\n            user_name: obj.user_name ? obj.user_name : \"기다리는 중...\",\n            user_store: obj.user_store ? obj.user_store : \"기다리는 중...\",\n            pizzaName: obj.pizza_name,\n            cookingTime: obj.cooking_time,\n            orderLists: obj.order_list,\n            historyList: [],\n            orderTimes: obj.order_time,\n          })\n        );\n\n        dispatch(\n          requestTopping({\n            cam_image: obj.cam_image,\n            guide_msg: obj.guide_msg,\n            warning_msg: obj.warning_msg,\n            working_list: obj.working_list,\n            curr_topping: obj.curr_topping,\n            pizza_recipe: obj.pizza_recipe,\n          })\n        );\n\n        if (obj.status) {\n          console.log(\"단계 클리어\");\n        }\n        socket.send(\"received\");\n      };\n\n      socket.onclose = () => {\n        console.log(\"Connection closed.\");\n      };\n    };\n\n    onLoad();\n  }, []);\n\n  return <MainPage />;\n};\n\nexport default App;\n","import orderReducer from \"reducer/orderReducer\";\nimport recipeReducer from \"reducer/recipeReducer\";\nimport { combineReducers } from \"@reduxjs/toolkit\";\n\nconst RootReducer = combineReducers({\n  order: orderReducer,\n  recipe: recipeReducer,\n});\n\nexport default RootReducer;\nexport type RootState = ReturnType<typeof RootReducer>;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"reducer/rootReducer\";\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport default store;\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nimport DIN2014 from \"assets/fonts/DIN2014-Regular.woff\";\n\nexport const GlobalStyles = createGlobalStyle`\n  ${reset}\n  /* other styles */\n\n  @font-face {\n  font-family: \"DIN2014\";\n  font-style: normal;\n  font-weight: 400;\n  font-style: normal;\n  font-weight: 300;\n  src: local('DIN 2014'), local('DIN2014'),\n       url(${DIN2014}) format('woff');\n\tunicode-range:U+0041-005A, U+0061-007A,\n}\n\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n\nhtml,body , #root{\n      height:100vh;\n  }\n  div{\n\t  \n     /* width:100%; */\n\t /* display:block; */\n   }\n   \n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\n\tline-height: 1;\n\tfont-family:'Noto Sans KR' , 'DIN2014' ,'sans-serif';}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n`;\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport App from \"./app\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport { GlobalStyles } from \"./GlobalStyle\";\n\nconst Root = () => {\n  return (\n    <Provider store={Store}>\n      <GlobalStyles />\n      <App />\n    </Provider>\n  );\n};\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./root\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}